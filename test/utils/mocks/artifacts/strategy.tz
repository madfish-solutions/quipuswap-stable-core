{ parameter
    (or (or %dev_part
           (or (list %approve_token (pair (nat %pool_token_id) (address %spender) (nat %amount)))
               (list %claim_rewards nat))
           (or (pair %connect_token_to_lending (nat %pool_token_id) (nat %lending_market_id))
               (pair %update_token_config
                  (nat %pool_token_id)
                  (nat %desired_reserves_rate_f)
                  (nat %delta_rate_f)
                  (nat %min_invest)
                  (bool %enabled))))
        (pair %update_state (map %tokens nat nat) (bool %manual))) ;
  storage
    (pair (address %factory)
          (pair %pool_data
             (address %pool_contract)
             (nat %pool_id)
             (map %token_map
                nat
                (or (address %fa12) (pair %fa2 (address %token_address) (nat %token_id)))))
          (map %token_map
             nat
             (pair (nat %lending_market_id)
                   (nat %desired_reserves_rate_f)
                   (nat %delta_rate_f)
                   (nat %min_invest)
                   (bool %enabled)
                   (nat %invested_tokens)))) ;
  code { LAMBDA
           (pair (pair (pair nat nat) address bool) bool)
           nat
           { UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             PUSH string "Lending has no suited convert view" ;
             SWAP ;
             DIG 5 ;
             DIG 4 ;
             DIG 5 ;
             DIG 5 ;
             PAIR 4 ;
             VIEW "convert"
                  (pair (nat %amount) (timestamp %interestUpdateTime) (timestamp %priceUpdateTime)) ;
             IF_NONE { FAILWITH } { SWAP ; DROP } ;
             PUSH string "'Update interest' for market should be called" ;
             NOW ;
             DUP 3 ;
             GET 3 ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             CAR } ;
         LAMBDA
           (pair (pair (list nat) address) bool)
           (map nat nat)
           { UNPAIR ;
             UNPAIR ;
             PUSH string "Lending has no suited balanceOf view" ;
             DIG 2 ;
             DIG 3 ;
             DIG 3 ;
             MAP { SELF_ADDRESS ; PAIR } ;
             PAIR ;
             VIEW "balanceOf"
                  (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))) ;
             IF_NONE { FAILWITH } { SWAP ; DROP } ;
             EMPTY_MAP nat nat ;
             SWAP ;
             ITER { SWAP ; DUP 2 ; CDR ; SOME ; DIG 2 ; CAR ; CDR ; UPDATE } } ;
         PUSH string "No Token yet" ;
         PUSH string "Not DEX pool token or wrong id" ;
         PUSH string "Contract hasn't update_operators/approve entrypoint" ;
         PUSH string "Contract has no transfer entrypoint" ;
         PUSH string "No balance for token returned in balance response" ;
         LAMBDA
           int
           nat
           { ISNAT ; IF_NONE { PUSH string "Value is not natural" ; FAILWITH } {} } ;
         PUSH nat 1000000000000000000 ;
         DIG 9 ;
         UNPAIR ;
         SWAP ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         GT ;
         IF { PUSH string "Sending XTZ not allowed here" ; FAILWITH } {} ;
         SWAP ;
         IF_LEFT
           { DIG 2 ;
             DROP ;
             PUSH string "Only developer is allowed here" ;
             PUSH string "Factory has no suited dev_address view" ;
             DUP 4 ;
             CAR ;
             UNIT ;
             VIEW "dev_address" address ;
             IF_NONE { FAILWITH } { SWAP ; DROP } ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DIG 7 ;
                     DIG 8 ;
                     DIG 9 ;
                     DROP 6 ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     ITER { DUP 5 ;
                            DUP 4 ;
                            GET 3 ;
                            GET 4 ;
                            DUP 3 ;
                            CAR ;
                            GET ;
                            IF_NONE { FAILWITH } { SWAP ; DROP } ;
                            DIG 2 ;
                            SWAP ;
                            DUP 3 ;
                            GET 4 ;
                            PAIR ;
                            DIG 2 ;
                            GET 3 ;
                            SELF_ADDRESS ;
                            DIG 2 ;
                            UNPAIR ;
                            SWAP ;
                            IF_LEFT
                              { DIG 2 ;
                                DROP ;
                                DUP 6 ;
                                SWAP ;
                                CONTRACT %approve (pair (address %spender) (nat %value)) ;
                                IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                PUSH mutez 0 ;
                                DIG 2 ;
                                DIG 3 ;
                                PAIR ;
                                TRANSFER_TOKENS }
                              { DUP 7 ;
                                DUP 2 ;
                                CAR ;
                                CONTRACT %update_operators
                                  (list (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                            (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))) ;
                                IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                PUSH mutez 0 ;
                                NIL (or (pair address address nat) (pair address address nat)) ;
                                PUSH nat 0 ;
                                DIG 5 ;
                                COMPARE ;
                                GT ;
                                IF { DIG 3 ; CDR ; DIG 5 ; DIG 5 ; PAIR 3 ; LEFT (pair address address nat) }
                                   { DIG 3 ; CDR ; DIG 5 ; DIG 5 ; PAIR 3 ; RIGHT (pair address address nat) } ;
                                CONS ;
                                TRANSFER_TOKENS } ;
                            CONS } ;
                     DIG 2 ;
                     DIG 3 ;
                     DROP 2 }
                   { DIG 5 ;
                     DROP ;
                     SWAP ;
                     NIL operation ;
                     DUP 2 ;
                     GET 4 ;
                     DUP 3 ;
                     CAR ;
                     PUSH string "Factory has no suited lending_contract view" ;
                     SWAP ;
                     UNIT ;
                     VIEW "lending_contract" address ;
                     IF_NONE { FAILWITH } { SWAP ; DROP } ;
                     PUSH bool False ;
                     DUP 2 ;
                     DUP 7 ;
                     MAP { DUP 5 ; SWAP ; GET ; IF_NONE { DUP 12 ; FAILWITH } {} ; CAR } ;
                     DIG 4 ;
                     DROP ;
                     PAIR ;
                     PAIR ;
                     DIG 10 ;
                     SWAP ;
                     EXEC ;
                     NIL (pair nat int nat) ;
                     DIG 5 ;
                     ITER { DUP 10 ;
                            DUP 7 ;
                            GET 3 ;
                            GET 4 ;
                            DUP 3 ;
                            GET ;
                            IF_NONE { FAILWITH } { SWAP ; DROP } ;
                            DUP 12 ;
                            DUP 8 ;
                            GET 4 ;
                            DUP 4 ;
                            GET ;
                            IF_NONE { FAILWITH } { SWAP ; DROP } ;
                            PUSH nat 1 ;
                            DUP 6 ;
                            DUP 3 ;
                            CAR ;
                            GET ;
                            IF_NONE { DUP 11 ; FAILWITH } {} ;
                            SUB ;
                            DUP 10 ;
                            SWAP ;
                            EXEC ;
                            PUSH bool True ;
                            PUSH bool False ;
                            DUP 9 ;
                            PAIR ;
                            DUP 4 ;
                            CAR ;
                            DIG 3 ;
                            PAIR ;
                            PAIR ;
                            PAIR ;
                            DUP 15 ;
                            SWAP ;
                            EXEC ;
                            DUP 2 ;
                            GET 10 ;
                            DUP 2 ;
                            SUB ;
                            DUP 3 ;
                            GET 10 ;
                            DUP 3 ;
                            COMPARE ;
                            GT ;
                            IF { DIG 5 ;
                                 DUP 4 ;
                                 CAR ;
                                 DIG 2 ;
                                 DIG 6 ;
                                 PAIR 3 ;
                                 CONS ;
                                 DUG 3 ;
                                 DUP 2 ;
                                 GET 10 ;
                                 SWAP ;
                                 SUB ;
                                 DUP 9 ;
                                 SWAP ;
                                 EXEC ;
                                 DIG 6 ;
                                 DIG 3 ;
                                 DUP 3 ;
                                 PAIR ;
                                 DUP 8 ;
                                 CAR ;
                                 PUSH string "Factory has no suited dev_address view" ;
                                 SWAP ;
                                 UNIT ;
                                 VIEW "dev_address" address ;
                                 IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                 SELF_ADDRESS ;
                                 DIG 2 ;
                                 UNPAIR ;
                                 SWAP ;
                                 IF_LEFT
                                   { DUP 14 ;
                                     SWAP ;
                                     CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                     IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                     PUSH mutez 0 ;
                                     DIG 2 ;
                                     DIG 4 ;
                                     PAIR ;
                                     DIG 3 ;
                                     PAIR ;
                                     TRANSFER_TOKENS }
                                   { DUP 14 ;
                                     DUP 2 ;
                                     CAR ;
                                     CONTRACT %transfer
                                       (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                     IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                     PUSH mutez 0 ;
                                     NIL (pair address (list (pair address nat nat))) ;
                                     NIL (pair address nat nat) ;
                                     DIG 5 ;
                                     DIG 5 ;
                                     CDR ;
                                     DIG 7 ;
                                     PAIR 3 ;
                                     CONS ;
                                     DIG 4 ;
                                     PAIR ;
                                     CONS ;
                                     TRANSFER_TOKENS } ;
                                 CONS ;
                                 PUSH string "Lending has no suited redeem entrypoint" ;
                                 DUP 7 ;
                                 CONTRACT %redeem (pair (nat %tokenId) (nat %amount) (nat %minReceived)) ;
                                 IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                 PUSH mutez 0 ;
                                 DUP 4 ;
                                 DIG 4 ;
                                 DIG 5 ;
                                 CAR ;
                                 PAIR 3 ;
                                 TRANSFER_TOKENS ;
                                 CONS ;
                                 DUG 3 }
                               { DROP 5 } } ;
                     SWAP ;
                     DIG 2 ;
                     DIG 5 ;
                     DIG 6 ;
                     DIG 7 ;
                     DIG 8 ;
                     DIG 9 ;
                     DIG 10 ;
                     DROP 8 ;
                     EMIT %claim_rewards
                       (list (pair (nat %pool_token_id) (int %reward) (nat %lending_market_id))) ;
                     CONS } }
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DIG 8 ;
                 DIG 9 ;
                 DROP 6 ;
                 IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DIG 2 ;
                     DUP 2 ;
                     GET 3 ;
                     GET 4 ;
                     DUP 4 ;
                     CAR ;
                     MEM ;
                     IF { DROP } { FAILWITH } ;
                     PUSH nat 0 ;
                     PUSH bool False ;
                     PUSH nat 0 ;
                     PUSH nat 0 ;
                     PUSH nat 0 ;
                     PUSH nat 0 ;
                     PAIR 6 ;
                     DUP 2 ;
                     GET 4 ;
                     DUP 4 ;
                     CAR ;
                     GET ;
                     IF_NONE {} { SWAP ; DROP } ;
                     PUSH nat 0 ;
                     DUP 2 ;
                     GET 10 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "Unclaimed reserves from Yupana" ; FAILWITH } ;
                     DUP 2 ;
                     DIG 2 ;
                     GET 4 ;
                     DIG 2 ;
                     DUP 4 ;
                     CDR ;
                     UPDATE 1 ;
                     SOME ;
                     DIG 3 ;
                     CAR ;
                     UPDATE ;
                     UPDATE 4 }
                   { SWAP ;
                     DIG 2 ;
                     DUP 2 ;
                     GET 3 ;
                     GET 4 ;
                     DUP 4 ;
                     CAR ;
                     MEM ;
                     IF { DROP } { FAILWITH } ;
                     DIG 2 ;
                     DUP 2 ;
                     GET 4 ;
                     DUP 4 ;
                     CAR ;
                     GET ;
                     IF_NONE { FAILWITH } { SWAP ; DROP } ;
                     DUP 2 ;
                     DIG 2 ;
                     GET 4 ;
                     DIG 2 ;
                     DUP 4 ;
                     GET 3 ;
                     UPDATE 3 ;
                     DUP 4 ;
                     GET 5 ;
                     UPDATE 5 ;
                     DUP 4 ;
                     GET 7 ;
                     UPDATE 7 ;
                     DUP 4 ;
                     GET 8 ;
                     UPDATE 9 ;
                     SOME ;
                     DIG 3 ;
                     CAR ;
                     UPDATE ;
                     UPDATE 4 } ;
                 NIL operation } }
           { DIG 6 ;
             DIG 8 ;
             DROP 2 ;
             DUP 2 ;
             GET 3 ;
             CAR ;
             PUSH string "Only dex is allowed here" ;
             SWAP ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             SWAP ;
             NIL operation ;
             NIL (pair nat int nat) ;
             DUP 3 ;
             CAR ;
             PUSH string "Factory has no suited lending_contract view" ;
             SWAP ;
             UNIT ;
             VIEW "lending_contract" address ;
             IF_NONE { FAILWITH } { SWAP ; DROP } ;
             DUP 5 ;
             CAR ;
             ITER { UNPAIR ;
                    DUP 12 ;
                    DUP 7 ;
                    GET 3 ;
                    GET 4 ;
                    DUP 3 ;
                    GET ;
                    IF_NONE { FAILWITH } { SWAP ; DROP } ;
                    DUP 7 ;
                    GET 4 ;
                    DUP 3 ;
                    GET ;
                    IF_NONE
                      { DROP 3 }
                      { PUSH nat 0 ;
                        DUP 2 ;
                        GET 10 ;
                        COMPARE ;
                        NEQ ;
                        PUSH nat 0 ;
                        DUP 6 ;
                        COMPARE ;
                        EQ ;
                        AND ;
                        IF { PUSH bool True }
                           { DUP 4 ;
                             DUP 11 ;
                             DUP 3 ;
                             GET 10 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR ;
                             DUP 2 ;
                             GET 5 ;
                             DUP 3 ;
                             GET 3 ;
                             DIG 2 ;
                             SUB ;
                             ABS ;
                             COMPARE ;
                             LT ;
                             NOT } ;
                        DUP 2 ;
                        GET 9 ;
                        DUP 11 ;
                        CDR ;
                        OR ;
                        AND ;
                        IF { DUP 10 ;
                             DUP 2 ;
                             GET 3 ;
                             DIG 5 ;
                             MUL ;
                             EDIV ;
                             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                             CAR ;
                             DUP 2 ;
                             GET 7 ;
                             DUP 2 ;
                             COMPARE ;
                             GT ;
                             IF {} { DROP ; PUSH nat 0 } ;
                             DUP 2 ;
                             GET 10 ;
                             DUP 2 ;
                             SUB ;
                             DUP ;
                             ISNAT ;
                             IF_NONE
                               { DUP ;
                                 ABS ;
                                 PUSH bool False ;
                                 DUP 8 ;
                                 NIL nat ;
                                 DUP 7 ;
                                 CAR ;
                                 CONS ;
                                 PAIR ;
                                 PAIR ;
                                 DUP 18 ;
                                 SWAP ;
                                 EXEC ;
                                 DUP 5 ;
                                 CAR ;
                                 GET ;
                                 IF_NONE { DUP 14 ; FAILWITH } {} ;
                                 PUSH bool True ;
                                 PUSH bool False ;
                                 DUP 10 ;
                                 PAIR ;
                                 DUP 7 ;
                                 CAR ;
                                 DIG 3 ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 DUP 19 ;
                                 SWAP ;
                                 EXEC ;
                                 DUP 2 ;
                                 SWAP ;
                                 COMPARE ;
                                 LT ;
                                 IF { PUSH nat 1 ;
                                      SWAP ;
                                      SUB ;
                                      DUP 13 ;
                                      SWAP ;
                                      EXEC ;
                                      PUSH nat 1 ;
                                      DIG 3 ;
                                      ADD ;
                                      DUG 2 ;
                                      PUSH nat 1 ;
                                      DIG 2 ;
                                      ADD ;
                                      SWAP }
                                    {} ;
                                 DIG 8 ;
                                 DIG 5 ;
                                 DUP 3 ;
                                 PAIR ;
                                 DUP 10 ;
                                 GET 3 ;
                                 CAR ;
                                 SELF_ADDRESS ;
                                 DIG 2 ;
                                 UNPAIR ;
                                 SWAP ;
                                 IF_LEFT
                                   { DUP 18 ;
                                     SWAP ;
                                     CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                     IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                     PUSH mutez 0 ;
                                     DIG 2 ;
                                     DIG 4 ;
                                     PAIR ;
                                     DIG 3 ;
                                     PAIR ;
                                     TRANSFER_TOKENS }
                                   { DUP 18 ;
                                     DUP 2 ;
                                     CAR ;
                                     CONTRACT %transfer
                                       (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                     IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                     PUSH mutez 0 ;
                                     NIL (pair address (list (pair address nat nat))) ;
                                     NIL (pair address nat nat) ;
                                     DIG 5 ;
                                     DIG 5 ;
                                     CDR ;
                                     DIG 7 ;
                                     PAIR 3 ;
                                     CONS ;
                                     DIG 4 ;
                                     PAIR ;
                                     CONS ;
                                     TRANSFER_TOKENS } ;
                                 CONS ;
                                 DUG 7 ;
                                 DUP ;
                                 DUP 5 ;
                                 CAR ;
                                 PAIR 3 ;
                                 DIG 7 ;
                                 PUSH string "Lending has no suited redeem entrypoint" ;
                                 DUP 8 ;
                                 CONTRACT %redeem (pair (nat %tokenId) (nat %amount) (nat %minReceived)) ;
                                 IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                 PUSH mutez 0 ;
                                 DIG 3 ;
                                 TRANSFER_TOKENS ;
                                 CONS ;
                                 DUG 6 }
                               { PUSH bool False ;
                                 PUSH bool True ;
                                 DUP 9 ;
                                 PAIR ;
                                 DUP 6 ;
                                 CAR ;
                                 DUP 4 ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR ;
                                 DUP 19 ;
                                 SWAP ;
                                 EXEC ;
                                 PUSH nat 0 ;
                                 DUP 2 ;
                                 COMPARE ;
                                 GT ;
                                 PUSH nat 0 ;
                                 DUP 4 ;
                                 COMPARE ;
                                 GT ;
                                 AND ;
                                 IF { DIG 9 ;
                                      PUSH string "Lending has no suited mint entrypoint" ;
                                      DUP 10 ;
                                      CONTRACT %mint (pair (nat %tokenId) (nat %amount) (nat %minReceived)) ;
                                      IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                      PUSH mutez 0 ;
                                      DIG 3 ;
                                      DUP 5 ;
                                      DUP 9 ;
                                      CAR ;
                                      PAIR 3 ;
                                      TRANSFER_TOKENS ;
                                      CONS ;
                                      DIG 5 ;
                                      DIG 2 ;
                                      PAIR ;
                                      SELF_ADDRESS ;
                                      DUP 10 ;
                                      GET 3 ;
                                      CAR ;
                                      DIG 2 ;
                                      UNPAIR ;
                                      SWAP ;
                                      IF_LEFT
                                        { DUP 17 ;
                                          SWAP ;
                                          CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                          IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                          PUSH mutez 0 ;
                                          DIG 2 ;
                                          DIG 4 ;
                                          PAIR ;
                                          DIG 3 ;
                                          PAIR ;
                                          TRANSFER_TOKENS }
                                        { DUP 17 ;
                                          DUP 2 ;
                                          CAR ;
                                          CONTRACT %transfer
                                            (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                          IF_NONE { FAILWITH } { SWAP ; DROP } ;
                                          PUSH mutez 0 ;
                                          NIL (pair address (list (pair address nat nat))) ;
                                          NIL (pair address nat nat) ;
                                          DIG 5 ;
                                          DIG 5 ;
                                          CDR ;
                                          DIG 7 ;
                                          PAIR 3 ;
                                          CONS ;
                                          DIG 4 ;
                                          PAIR ;
                                          CONS ;
                                          TRANSFER_TOKENS } ;
                                      CONS ;
                                      DUG 6 }
                                    { SWAP ; DIG 5 ; DROP 3 } } ;
                             DUP 8 ;
                             DIG 8 ;
                             GET 4 ;
                             DUP 5 ;
                             DIG 4 ;
                             UPDATE 10 ;
                             DUP 6 ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             UPDATE 4 ;
                             DUG 6 ;
                             SWAP ;
                             CAR ;
                             SWAP ;
                             DIG 2 ;
                             PAIR 3 ;
                             DIG 2 ;
                             SWAP ;
                             CONS ;
                             SWAP }
                           { DROP 4 } } } ;
             DIG 4 ;
             DIG 5 ;
             DIG 6 ;
             DIG 7 ;
             DIG 8 ;
             DIG 9 ;
             DIG 10 ;
             DIG 11 ;
             DROP 9 ;
             PUSH nat 0 ;
             DUP 2 ;
             SIZE ;
             COMPARE ;
             GT ;
             IF { EMIT %rebalance
                    (list (pair (nat %pool_token_id) (int %rebalanced) (nat %lending_market_id))) ;
                  CONS }
                { DROP } } ;
         PAIR } ;
  view "get_pool_data"
       unit
       (pair (address %pool_contract)
             (nat %pool_id)
             (map %token_map
                nat
                (or (address %fa12) (pair %fa2 (address %token_address) (nat %token_id)))))
       { CDR ; GET 3 } ;
  view "should_rebalance"
       (map nat nat)
       bool
       { UNPAIR ;
         PUSH bool True ;
         SWAP ;
         ITER { UNPAIR ;
                DUP 4 ;
                GET 4 ;
                SWAP ;
                GET ;
                IF_NONE
                  { DROP }
                  { PUSH nat 0 ;
                    DUP 2 ;
                    GET 10 ;
                    COMPARE ;
                    NEQ ;
                    PUSH nat 0 ;
                    DUP 4 ;
                    COMPARE ;
                    EQ ;
                    AND ;
                    IF { DROP 2 ; PUSH bool False }
                       { SWAP ;
                         PUSH nat 1000000000000000000 ;
                         DUP 3 ;
                         GET 10 ;
                         MUL ;
                         EDIV ;
                         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                         CAR ;
                         DUP 2 ;
                         GET 5 ;
                         DIG 2 ;
                         GET 3 ;
                         DIG 2 ;
                         SUB ;
                         ABS ;
                         COMPARE ;
                         LT } ;
                    AND } } ;
         SWAP ;
         DROP ;
         NOT } ;
  view "deposit_map" unit (map nat nat) { CDR ; GET 4 ; MAP { CDR ; GET 10 } } }

